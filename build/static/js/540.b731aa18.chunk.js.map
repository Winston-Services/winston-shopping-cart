{"version":3,"file":"static/js/540.b731aa18.chunk.js","mappings":"sUAce,SAASA,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0CJ,EAAAA,EAAAA,WAAS,GAAnD,eAAOK,EAAP,KAAsBC,EAAtB,KACA,GAAgCN,EAAAA,EAAAA,UAAS,IAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KAJkC,wCAMlC,WAA4BC,GAA5B,iEAEE,GADAA,EAAEC,iBACEP,EAAS,CACXG,GAAiB,GACjB,IAWEE,EAAY,CACVG,SAAS,EACTC,IAAK,gCAEPN,GAAiB,EAOlB,CANC,MAAOG,GACPD,EAAY,CACVG,SAAS,EACTC,IAAK,oCAEPN,GAAiB,EAClB,CACF,CA3BH,4CANkC,sBAwClC,OACE,SAAC,IAAD,CAAWO,GAAI,CAAEC,GAAI,SAArB,UACE,UAAC,KAAD,CAAMC,WAAS,EAACC,QAAQ,QAAxB,WACE,SAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,gCAGA,UAAC,KAAD,CAAMD,MAAI,EAACC,GAAI,EAAf,WACE,SAAC,IAAD,CAAYC,QAAQ,KAApB,oBACA,SAAC,IAAD,CAAYA,QAAQ,YAAYL,GAAI,EAApC,2IAIA,UAAC,KAAD,CAAMC,WAAS,EAACK,QAAS,EAAzB,WACE,UAAC,KAAD,CAAMH,MAAI,EAACH,GAAG,OAAd,WACE,SAAC,IAAD,CAAOO,MAAM,YAAYR,GAAI,CAAES,EAAG,GAAlC,UACE,SAAC,IAAD,CAAYC,SAAU,GAAIC,WAAY,IAAtC,2CAIF,SAAC,IAAD,CAAOH,MAAM,YAAYR,GAAI,CAAEY,GAAI,EAAGX,GAAI,OAA1C,UACE,SAAC,IAAD,CAAYK,QAAQ,YAAYO,UAAW,SAA3C,8LAOJ,SAAC,KAAD,CAAMT,MAAI,EAACH,GAAG,OAAd,UACE,SAAC,IAAD,CAAOO,MAAM,YAAYR,GAAI,CAAES,EAAG,UAMrCf,IAAaA,EAASI,SACrB,SAAC,IAAD,CAAYQ,QAAQ,KAAKL,GAAI,QAASa,GAAI,EAA1C,+CAIA,kBAAMC,SAAU,SAACnB,GAAD,OA/EQ,2CA+EDoB,CAAapB,EAApB,EAAhB,WACE,SAAC,IAAD,CAAYU,QAAQ,KAAKL,GAAI,QAASa,GAAI,EAA1C,0CAGA,SAAC,IAAD,CACEG,WAAS,EACTC,KAAM,OACNC,MAAO/B,EACPgC,SAAU,SAACxB,GAAD,OAAOP,EAAWO,EAAEyB,OAAOF,MAA3B,EACVG,MAAM,gBACNhB,QAAQ,WACRiB,YAAY,kCACZC,SAAUhC,EACViC,WAAY/B,EAASK,IACrB2B,MAAOhC,EAASI,QAChB6B,UAAQ,KAEV,SAAC,KAAD,CAAM1B,GAAI,EAAV,UACE,SAAC,IAAD,CACE2B,QAAQ,2CACRR,SA/DhB,SAAkBD,GAChB5B,EAAW4B,EACZ,OAgEW,UAAC,IAAD,CACED,KAAK,SACLZ,QAAQ,YACRE,MAAM,YACNR,GAAI,CAAEC,GAAI,QACVuB,UAAWlC,GAAWE,EALxB,UAOGA,GACC,SAAC,IAAD,CAAkBqC,KAAM,GAAI7B,GAAI,CAAE8B,GAAI,KACpC,KATN,sBAkBb,C","sources":["pages/setup/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Button,\n  CircularProgress,\n  Container,\n  Grid,\n  Paper,\n  TextField,\n  Typography,\n} from \"@mui/material\";\n\nimport config from \"../../config\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nexport default function Dashboard() {\n  const [address, setAddress] = useState(\"\");\n  const [captcha, setCaptcha] = useState(\"\");\n  const [isLeadLoading, setIsLeadLoading] = useState(false);\n  const [response, setResponse] = useState(\"\");\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (captcha) {\n      setIsLeadLoading(true);\n      try {\n        /*\n        await apiInstance({\n          method: \"POST\",\n          path: \"/users/lead\",\n          body: {\n            email,\n            winstonPreregister: true,\n          },\n        });\n        */\n        setResponse({\n          isError: false,\n          msg: \"Your request has been sent.\",\n        });\n        setIsLeadLoading(false);\n      } catch (e) {\n        setResponse({\n          isError: true,\n          msg: \"Your request has not been sent.\",\n        });\n        setIsLeadLoading(false);\n      }\n    }\n  }\n\n  function onChange(value) {\n    setCaptcha(value);\n  }\n\n  return (\n    <Container sx={{ mt: \"100px\" }}>\n      <Grid container display=\"block\">\n        <Grid item md={4}>\n          Setup Video Guide\n        </Grid>\n        <Grid item md={8}>\n          <Typography variant=\"h4\">Setup</Typography>\n          <Typography variant=\"subtitle2\" mt={2}>\n            Welcome to the Winston Shopping Cart built to utilize blockchain\n            technologies to enable a decentralized shopping expereince.\n          </Typography>\n          <Grid container spacing={3}>\n            <Grid item mt=\"50px\">\n              <Paper color=\"secondary\" sx={{ p: 2 }}>\n                <Typography fontSize={96} fontWeight={300}>\n                  Winston Defi Shopping Cart\n                </Typography>\n              </Paper>\n              <Paper color=\"secondary\" sx={{ py: 1, mt: \"5px\" }}>\n                <Typography variant=\"subtitle1\" textAlign={\"center\"}>\n                  Winston; Your personal assistant to all things blockchain is\n                  here to help you build the customer expereince expected from a\n                  great platform utilzing blockchain technology.\n                </Typography>\n              </Paper>\n            </Grid>\n            <Grid item mt=\"50px\">\n              <Paper color=\"secondary\" sx={{ p: 2 }}>\n                \n              </Paper>\n            </Grid>\n          </Grid>\n\n          {response && !response.isError ? (\n            <Typography variant=\"h6\" mt={\"100px\"} mb={2}>\n              Your request has been submitted.\n            </Typography>\n          ) : (\n            <form onSubmit={(e) => handleSubmit(e)}>\n              <Typography variant=\"h6\" mt={\"100px\"} mb={2}>\n                Get notified when we launch\n              </Typography>\n              <TextField\n                fullWidth\n                type={\"text\"}\n                value={address}\n                onChange={(e) => setAddress(e.target.value)}\n                label=\"Admin Address\"\n                variant=\"outlined\"\n                placeholder=\"Enter your Wallet Address here.\"\n                disabled={isLeadLoading}\n                helperText={response.msg}\n                error={response.isError}\n                required\n              />\n              <Grid mt={3}>\n                <ReCAPTCHA\n                  sitekey=\"6LdF4tkfAAAAAIlIBwHPLAH6oU9jtVIRB8Cn5FO9\"\n                  onChange={onChange}\n                />\n              </Grid>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n                sx={{ mt: \"30px\" }}\n                disabled={!captcha || isLeadLoading}\n              >\n                {isLeadLoading ? (\n                  <CircularProgress size={24} sx={{ mr: 2 }} />\n                ) : null}\n                Submit\n              </Button>\n            </form>\n          )}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n"],"names":["Dashboard","useState","address","setAddress","captcha","setCaptcha","isLeadLoading","setIsLeadLoading","response","setResponse","e","preventDefault","isError","msg","sx","mt","container","display","item","md","variant","spacing","color","p","fontSize","fontWeight","py","textAlign","mb","onSubmit","handleSubmit","fullWidth","type","value","onChange","target","label","placeholder","disabled","helperText","error","required","sitekey","size","mr"],"sourceRoot":""}